permissions: write-all

name: CI

on:
  push:
    branches: [main, development]
    paths-ignore:
      - '**/*.md'
      - '**/*.env.example'
      - '.gitignore'
  pull_request:
    branches: [main, development]
    paths-ignore:
      - '**/*.md'
      - '**/*.env.example'
      - '.gitignore'

env:
  CI: true

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - run: bun install --frozen-lockfile
      - run: bun run lint
      - name: Update lint Badge
        uses: RubbaBoy/BYOB@v1.3.0
        if: ${{ always() }}
        with:
          name: lint
          status: ${{ job.status }}
          color: ${{ job.status == 'success' && '31A802' || job.status == 'failure' && 'D10007' || 'E0A607' }}
          label: 'Lint Status'
          github_token: ${{ secrets.GITHUB_TOKEN }}

  unit-test:
    needs: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - run: bun install --frozen-lockfile
      - run: bun run test
      - name: Update unit-test Badge
        uses: RubbaBoy/BYOB@v1.3.0
        if: ${{ always() }}
        with:
          name: unit-test
          status: ${{ job.status }}
          color: ${{ job.status == 'success' && '31A802' || job.status == 'failure' && 'D10007' || 'E0A607' }}
          label: 'Unit Test Status'
          github_token: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: lint
    runs-on: ubuntu-latest
    outputs:
      build-artifact: build
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - run: bun install --frozen-lockfile
      - run: bun run build

      - name: Save build folder
        uses: actions/upload-artifact@v3
        with:
          name: .next
          if-no-files-found: error
          path: .next
      - name: Update build Badge
        uses: RubbaBoy/BYOB@v1.3.0
        if: ${{ always() }}
        with:
          name: build
          status: ${{ job.status }}
          color: ${{ job.status == 'success' && '31A802' || job.status == 'failure' && 'D10007' || 'E0A607' }}
          label: 'Build Status'
          github_token: ${{ secrets.GITHUB_TOKEN }}

  e2e-tests:
    name: e2e setup
    needs: build
    runs-on: ubuntu-latest
    env:
      NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      PLAYWRIGHT_USERNAME: ${{ secrets.PLAYWRIGHT_USERNAME }}
      PLAYWRIGHT_PASSWORD: ${{ secrets.PLAYWRIGHT_PASSWORD }}
    steps:
      - uses: actions/checkout@v4.1.1
      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - run: bun install --frozen-lockfile
      - run: bunx playwright install --with-deps

      - name: Download the build folder
        uses: actions/download-artifact@v3
        with:
          name: .next
          path: .next

      - name: Run e2e tests
        run: bun run test:e2e:headless
      - uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: playwright/reports
          retention-days: 30

      - uses: RubbaBoy/BYOB@v1.3.0
        if: ${{ always() }}
        with:
          name: e2e-tests
          status: ${{ job.status }}
          color: ${{ job.status == 'success' && '31A802' || job.status == 'failure' && 'D10007' || 'E0A607' }}
          label: 'E2E Test Status'
          github_token: ${{ secrets.GITHUB_TOKEN }}
